@(#)$Id$

3.5 - 12.may.2005 - steven

  * Incorporated Arien's ideas:
  
  	* Start in LEARN state, where we probe every second or so, for
	  "--learn" times. During this period, we do not sponge addresses,
	  we only probe and learn.
	* Rewrote the handling of pending addresses. Pending addresses are
	  now probed once per second for max_pending times. The previous
	  behaviour was to probe a pending IP whenever an ARP query for it
	  came in. If the incoming rate is high enough, we exhaust our pending
	  probes before the target IP has a chance to answer.

  * Added ARP rating through the "--proberate" option. Throwing ARP
    queries at the interface at full CPU speed causes many packets to
	be dropped, whether it's at the interface, the LAN (switch), or
	the receiving end. Besides, broadcast storms are the very thing
	we are trying to avoid here.

  * --dummy now sends probes, but never sponged answers. Previously
    it was not sending probes either, making it difficult to test the
	sweeping/probing code.

3.4.1 - 10.may.2005 - steven

  * Logging fixes. One log line for a sponge event.
  * Also log/notify for "pending" states.
  * Various POD fixes.

3.4 - 09.may.2005 - steven

  * Renamed to "arpsponge" to prevent lawsuits :-)
  * Cleaned up a bunch of stub files in the debian directory.

3.3.2 - 03.may.2005 - steven

  * "misfit" ARPs now get their src MAC logged as well.

3.3.1 - 03.may.2005 - steven

  * Added check for "misfit" ARPs and logging of those.

3.3 - 03.may.2005 - steven

  * Added "HUP" signal to arpswiffer. Added README file.

3.2 - 01.may.2005 - steven

  * Sponge.pm "set_alive" needs to check for local IP, otherwise the
    state table gets contaminated.

3.1 - 30.apr.2005 - steven

  * Properly Debianized.
  * Added code to recognize the duplicate detection packets from
    DHCP clients.

